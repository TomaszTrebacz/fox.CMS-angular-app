{"version":3,"sources":["./src/app/core/graphql/query/category/listCategories.query.ts","./src/app/modules/home/home.component.ts","./src/app/modules/home/home.component.html","./src/app/modules/blog/blog/blog-routing.module.ts","./src/app/modules/admin/admin.module.ts","./src/app/core/enums/userRole.enum.ts","./src/app/core/helpers/crypto.ts","./src/app/core/graphql/index.ts","./src/app/modules/blog/blog/blog.component.ts","./src/app/modules/blog/blog/blog.component.html","./src/app/core/graphql/query/auth/index.ts","./src/app/core/interceptors/index.ts","./src/app/core/storage/refresh-token.storage.ts","./src/app/modules/users/edit-account/edit-account.component.ts","./src/app/modules/users/edit-account/edit-account.component.html","./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/app/core/services/user/user.service.ts","./src/app/core/graphql/query/category/index.ts","./src/app/core/graphql/query/user/index.ts","./src/environments/environment.ts","./src/app/modules/users/users.module.ts","./src/app/core/graphql/mutation/auth/changePassByToken.mutation.ts","./src/app/core/interceptors/progress-bar.interceptor.ts","./src/app/core/storage/access-token.storage.ts","./src/app/core/graphql/mutation/auth/changePassword.mutation.ts","./src/app/core/footer/footer.component.ts","./src/app/core/footer/footer.component.html","./src/app/core/graphql/query/auth/login.query.ts","./src/app/core/graphql/mutation/user/updateUser.mutation.ts","./src/app/core/graphql/mutation/auth/resetPassword.mutation.ts","./src/app/modules/admin/admin-routing.module.ts","./src/app/core/storage/user.storage.ts","./src/app/modules/users/reset-password/by-phone/confirmation-code/confirmation-code.component.ts","./src/app/modules/users/reset-password/by-phone/confirmation-code/confirmation-code.component.html","./src/app/core/guards/auth.guard.ts","./src/app/modules/blog/blog/blog.module.ts","./src/app/core/graphql/query/user/currentUser.query.ts","./src/app/modules/users/register/register.component.ts","./src/app/modules/users/register/register.component.html","./src/app/core/services/auth/auth.service.ts","./src/app/modules/users/reset-password/by-email/by-email.component.ts","./src/app/modules/users/reset-password/by-email/by-email.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/users/reset-password/by-phone/by-phone.component.ts","./src/app/modules/users/reset-password/by-phone/by-phone.component.html","./src/app/core/graphql/mutation/auth/index.ts","./src/app/modules/admin/workboard/workboard.component.ts","./src/app/modules/admin/workboard/workboard.component.html","./src/app/modules/users/reset-password/by-email/change-pass/change-pass.component.ts","./src/app/modules/users/reset-password/by-email/change-pass/change-pass.component.html","./src/app/core/graphql/mutation/user/register.mutation.ts","./src/app/core/graphql/mutation/index.ts","./src/app/core/graphql/mutation/auth/logout.mutation.ts","./src/app/core/services/posts/posts.service.ts","./src/app/modules/users/users-routing.module.ts","./src/app/core/helpers/index.ts","./src/app/core/graphql/mutation/auth/changeConfirmToken.mutation.ts","./src/app/core/graphql/mutation/auth/sendChangePassEmail.mutation.ts","./src/app/core/graphql/mutation/user/index.ts","./src/app/app.module.ts","./src/app/modules/users/account/account.component.ts","./src/app/modules/users/account/account.component.html","./src/app/modules/users/confirm-account/confirm-account.component.ts","./src/app/modules/users/confirm-account/confirm-account.component.html","./src/app/shared/progress-bar/progress-bar.component.ts","./src/app/shared/progress-bar/progress-bar.component.html","./src/app/core/graphql/mutation/auth/sendCodePhone.mutation.ts","./src/app/core/graphql/query/index.ts","./src/app/core/graphql/query/post/allPosts.query.ts","./src/app/core/services/progress-bar/progress-bar.service.ts","./src/app/core/enums/index.ts","./src/app/modules/users/confirm-account/resend-confirm-link/resend-confirm-link.component.ts","./src/app/modules/users/confirm-account/resend-confirm-link/resend-confirm-link.component.html","./src/app/core/graphql/query/post/index.ts","./src/app/modules/users/login/login.component.ts","./src/app/modules/users/login/login.component.html","./src/app/modules/users/reset-password/reset-password.component.ts","./src/app/modules/users/reset-password/reset-password.component.html","./src/app/core/services/categories/categories.service.ts","./src/app/core/core.module.ts","./src/app/modules/users/change-password/change-password.component.ts","./src/app/modules/users/change-password/change-password.component.html","./src/app/core/graphql/config/index.ts","./src/app/shared/fielderrors/fielderrors.component.ts","./src/app/shared/fielderrors/fielderrors.component.html","./src/app/core/storage/index.ts","./src/app/app-routing.module.ts","./src/app/core/graphql/mutation/auth/confirmUser.mutation.ts","./src/app/core/graphql/config/graphql.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Query, gql } from 'apollo-angular';\nimport { Category } from '../../../models/category.interface';\n\nexport interface Response {\n  categories: Category[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListCategoriesGQL extends Query<Response> {\n  document = gql`\n    query {\n      categories {\n        name\n      }\n    }\n  `;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BlogComponent } from './blog.component';\n\nconst blogRoutes: Routes = [{ path: 'blog', component: BlogComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(blogRoutes)],\n  exports: [RouterModule],\n})\nexport class BlogRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, AdminRoutingModule],\n})\nexport class AdminModule {}\n","export enum userRole {\n  ROOT = 'root',\n  ADMIN = 'admin',\n  USER = 'user',\n}\n","import CryptoES from 'crypto-es';\nimport { environment } from 'src/environments/environment';\n\nconst secretKey = environment.aesKey;\n\nexport function encrypt(value: string): string {\n  return CryptoES.AES.encrypt(value, secretKey.trim()).toString();\n}\n\nexport function decrypt(value: string) {\n  return CryptoES.AES.decrypt(value, secretKey.trim()).toString(\n    CryptoES.enc.Utf8\n  );\n}\n","export * from './mutation';\nexport * from './query';\nexport * from './config';\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Category } from 'src/app/core/models/category.interface';\nimport { Post } from 'src/app/core/models/post.interface';\nimport { CategoriesService } from 'src/app/core/services/categories/categories.service';\nimport { PostsService } from 'src/app/core/services/posts/posts.service';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n  posts: Observable<Post[]>;\n  categories: Observable<Category[]>;\n\n  constructor(\n    private postsservice: PostsService,\n    private categoriesService: CategoriesService\n  ) {}\n\n  ngOnInit() {\n    this.posts = this.postsservice.findAll().pipe(map(result => result));\n    this.categories = this.categoriesService\n      .findAll()\n      .pipe(map(result => result));\n  }\n}\n","<mat-card *ngFor=\"let post of posts | async\" class=\"post\">\n  <mat-card-header>\n    <mat-card-title>{{ post.title }}</mat-card-title>\n    <mat-card-subtitle>by {{ post.user.firstName }} {{ post.user.lastName }}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <p>\n      {{ post.text }}\n    </p>\n  </mat-card-content>\n</mat-card>\n\n<div>\n  <h1>Categories</h1>\n<p *ngFor=\"let category of categories | async\">\n{{ category.name }}\n</p>\n</div>\n\n","export * from './login.query';\n","export * from './progress-bar.interceptor';\n","import { decrypt, encrypt } from '../helpers';\n\nexport function RefreshToken() {\n  return (target: any, key: string) => {\n    const tokenKey = 'refreshtoken';\n\n    Object.defineProperty(target, key, {\n      get: () => {\n        const refreshtoken = localStorage.getItem(tokenKey);\n\n        if (refreshtoken) {\n          return JSON.parse(decrypt(refreshtoken));\n        }\n\n        return null;\n      },\n      set: (token: string) => {\n        localStorage.setItem(tokenKey, encrypt(token));\n      }\n    });\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { first } from 'rxjs/operators';\nimport { UserService } from 'src/app/core/services/user/user.service';\n\n@Component({\n  selector: 'app-edit-account',\n  templateUrl: './edit-account.component.html',\n  styleUrls: ['./edit-account.component.css']\n})\nexport class EditAccountComponent implements OnInit {\n  form: FormGroup;\n  error: '';\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private messageService: MessageService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      firstName: [\n        '',\n        [Validators.required, Validators.minLength(3), Validators.maxLength(30)]\n      ],\n      lastName: [\n        '',\n        [Validators.required, Validators.minLength(3), Validators.maxLength(30)]\n      ]\n    });\n  }\n\n  hasFormErrors() {\n    return !this.form.valid;\n  }\n\n  onSubmit() {\n    if (this.form.invalid) {\n      return;\n    }\n    console.log(this.form.value);\n\n    this.userService\n      .updateUser(this.form.value)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.router.navigateByUrl('/users/account');\n          this.messageService.add({\n            key: 'defaultToast',\n            severity: 'success',\n            summary: 'Successfully edited!',\n            detail: `Your account data was edited.`\n          });\n        },\n        error: error => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'error',\n            summary: 'Can not edit data',\n            detail: error.message\n          });\n        }\n      });\n  }\n}\n","<form [formGroup]=\"form\" class=\"ui-g\">\n    <p-panel header=\"Edit Account\" class=\"ui-g-12\">\n        <div class=\"ui-g\">\n            <label for=\"firstName\" class=\"ui-g-12 ui-md-2\">First Name</label>\n            <input pInputText id=\"firstName\" formControlName=\"firstName\" placeholder=\"Enter your firstName\" class=\"ui-g-12 ui-md-5\"/>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"form\" field=\"firstName\" nicename=\"firstName\"></app-fielderrors>\n            </div>\n        </div>\n        <div class=\"ui-g\">\n            <label for=\"lastName\" class=\"ui-g-12 ui-md-2\">Last Name</label>\n            <input pInputText id=\"lastName\" formControlName=\"lastName\" placeholder=\"Enter your firstName\" class=\"ui-g-12 ui-md-5\"/>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"form\" field=\"lastName\" nicename=\"lastName\"></app-fielderrors>\n            </div>\n        </div>\n        <button pButton type=\"button\" label=\"Click\" [disabled]=\"!form.valid\" (click)=\"onSubmit()\"></button>\n    </p-panel>\n    \n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MenuItem } from 'primeng/api';\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  items: MenuItem[];\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    this.items = [\n      {\n        label: 'Home',\n        icon: 'pi pi-fw pi-home',\n        url: '/'\n      },\n      {\n        label: 'Blog',\n        icon: 'pi pi-fw pi-pencil',\n        url: 'blog'\n      },\n      {\n        label: 'Login',\n        icon: 'pi pi-fw pi-key',\n        url: '/users/login'\n      },\n      {\n        label: 'Register',\n        icon: 'pi pi-fw pi-key',\n        url: '/users/register'\n      }\n    ];\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/users/login']);\n  }\n}\n","<p-menubar [model]=\"items\">\n    <button pButton type=\"button\" label=\"Log out\"  (click)=\"logout()\"></button>\n</p-menubar>\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport {\n  CurrentUserSQL,\n  RegisterGQL,\n  UpdateUserGQL\n} from 'src/app/core/graphql';\nimport { User } from 'src/app/core/models';\n\nexport interface RegisterForm {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  phoneNumber: string;\n}\n\nexport interface UpdateUserForm {\n  firstName: string;\n  lastName: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(\n    private currentUserSQL: CurrentUserSQL,\n    private registerGQL: RegisterGQL,\n    private updateUserGQL: UpdateUserGQL\n  ) {}\n\n  getCurrentUser(): Observable<User> {\n    return this.currentUserSQL\n      .fetch()\n      .pipe(map(result => result.data.currentUser));\n  }\n\n  register(credentials: RegisterForm): Observable<any> {\n    return this.registerGQL.mutate({\n      input: credentials\n    });\n  }\n\n  updateUser(input: UpdateUserForm): Observable<any> {\n    return this.updateUserGQL.mutate({ input: input });\n  }\n}\n","export * from './listCategories.query';\n","export * from './currentUser.query';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  aesKey: process.env.AES_KEY,\n  backendUrl: process.env.BACKEND_URL,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PasswordModule } from 'primeng/password';\n\nimport { UsersRoutingModule } from './users-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, UsersRoutingModule],\n})\nexport class UsersModule {}\n","import { Injectable } from '@angular/core';\nimport { Mutation, gql } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChangePassByTokenGQL extends Mutation {\n  document = gql`\n    mutation($input: ChangePassByTokenInput) {\n      changePassByToken(changePassByTokenInput: $input)\n    }\n  `;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ProgressBarService } from '../services/progress-bar/progress-bar.service';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class ProgressBarInterceptor implements HttpInterceptor {\n  constructor(public progressBarService: ProgressBarService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    this.progressBarService.show();\n    return next\n      .handle(request)\n      .pipe(finalize(() => this.progressBarService.hide()));\n  }\n}\n","import { decrypt, encrypt } from '../helpers';\n\nexport function AccessToken() {\n  return (target: any, key: string) => {\n    const tokenKey = 'accesstoken';\n\n    Object.defineProperty(target, key, {\n      get: () => {\n        const accesstoken = localStorage.getItem(tokenKey);\n\n        if (accesstoken) {\n          return JSON.parse(decrypt(accesstoken));\n        }\n\n        return null;\n      },\n      set: (token: string) => {\n        localStorage.setItem(tokenKey, encrypt(token));\n      }\n    });\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Mutation, gql } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChangePasswordGQL extends Mutation {\n  document = gql`\n    mutation($password: String) {\n      changePassword(password: $password)\n    }\n  `;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","App created with Node + Typescript & NestJS, GraphQL with Apollo Federation and Angular.","import { Injectable } from '@angular/core';\nimport { Query, gql } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginGQL extends Query<any> {\n  document = gql`\n    query($input: LoginInput) {\n      login(loginCredentials: $input) {\n        user {\n          id\n          firstName\n        }\n        accessToken\n        refreshToken\n        role\n      }\n    }\n  `;\n}\n","import { Injectable } from '@angular/core';\nimport { Mutation, gql } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateUserGQL extends Mutation {\n  document = gql`\n    mutation($input: UpdateUserInput) {\n      updateUser(updateUserInput: $input)\n    }\n  `;\n}\n","import { Injectable } from '@angular/core';\nimport { Mutation, gql } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ResetPasswordGQL extends Mutation {\n  document = gql`\n    mutation($input: ResetPasswordInput) {\n      resetPassword(resetPasswordInput: $input)\n    }\n  `;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from 'src/app/core/guards/auth.guard';\nimport { userRole } from 'src/app/core/enums';\nimport { WorkboardComponent } from './workboard/workboard.component';\n\nconst adminRoutes: Routes = [\n  {\n    path: 'admin',\n    children: [\n      {\n        path: 'workboard',\n        component: WorkboardComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [userRole.ADMIN, userRole.ROOT] }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(adminRoutes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule {}\n","import { decrypt, encrypt } from '../helpers';\n\nexport function UserStorage() {\n  return (target: any, key: string) => {\n    const itemKey = 'user';\n\n    Object.defineProperty(target, key, {\n      get: () => {\n        const user = localStorage.getItem(itemKey);\n\n        if (user) {\n          return JSON.parse(decrypt(user));\n        }\n\n        return null;\n      },\n      set: (token: string) => {\n        localStorage.setItem(itemKey, encrypt(JSON.stringify(token)));\n      }\n    });\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { distinct, first, map, tap } from 'rxjs/operators';\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\n\nenum Loading {\n  true,\n  false\n}\n\n@Component({\n  selector: 'app-confirmation-code',\n  templateUrl: './confirmation-code.component.html',\n  styleUrls: ['./confirmation-code.component.css']\n})\nexport class ConfirmationCodeComponent implements OnInit {\n  codeForm: FormGroup;\n  error: '';\n  numberPattern: '^[+][0-9]*$';\n  Loading = Loading;\n  loading = Loading.false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.codeForm = this.fb.group({\n      phoneNumber: [\n        '',\n        [Validators.required, Validators.pattern(this.numberPattern)]\n      ],\n      code: [\n        '',\n        [Validators.required, Validators.minLength(4), Validators.maxLength(4)]\n      ]\n    });\n  }\n\n  onConfirmSubmit() {\n    if (this.codeForm.invalid) {\n      return;\n    }\n\n    this.loading = Loading.true;\n\n    this.codeForm.patchValue({\n      code: +this.codeForm.value.code\n    });\n\n    this.authService\n      .resetPassword(this.codeForm.value)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.loading = Loading.false;\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'success',\n            summary: 'Password reset & send by SMS!',\n            detail: 'Please check your phone!'\n          });\n        },\n        error: error => {\n          this.loading = Loading.false;\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'error',\n            summary: 'Password was not reset',\n            detail: error\n          });\n        }\n      });\n  }\n}\n","<form [formGroup]=\"codeForm\" class=\"ui-g\">\n    <p-panel header=\"Confirmation Code\" class=\"ui-g-12\">\n        <p-progressSpinner *ngIf=\"loading == Loading.true\"[style]=\"{width: '10rem', height: '10rem'}\" strokeWidth=\"3\" animationDuration=\".5s\"></p-progressSpinner>\n        <div *ngIf=\"error\" class=\"ui-g\">{{error}}</div> \n        <div class=\"ui-g\">\n            <label for=\"phoneNumber\" class=\"ui-g-12 ui-md-2\">Phone Number</label>\n            <p-inputMask pInputMask id=\"phoneNumber\" formControlName=\"phoneNumber\" mask=\"+99999999999\" placeholder=\"+99999999999\"></p-inputMask>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"codeForm\" field=\"phoneNumber\" nicename=\"phoneNumber\"></app-fielderrors>\n            </div>\n        </div>\n        \n        <div class=\"ui-g\">\n            <label for=\"code\" class=\"ui-g-12 ui-md-2\">Code</label>\n            <p-inputMask pInputMask id=\"code\" pKeyFilter=\"int\" formControlName=\"code\" mask=\"9999\" placeholder=\"0000\"></p-inputMask>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"codeForm\" field=\"code\" nicename=\"code\"></app-fielderrors>\n            </div>\n        </div>\n       \n        <button pButton type=\"button\" label=\"Click\" [disabled]=\"!codeForm.valid\" (click)=\"onConfirmSubmit()\"></button>\n\n    </p-panel>\n    \n</form>","import { Injectable } from '@angular/core';\nimport {\n  Router,\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from '@angular/router';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const user = this.authService.userValue;\n\n    if (user) {\n      if (route.data.roles && !route.data.roles.includes(user.role)) {\n        this.router.navigate(['/']);\n        return false;\n      }\n\n      return true;\n    }\n\n    this.authService.logout();\n    this.router.navigate(['/users/login']);\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BlogRoutingModule } from './blog-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, BlogRoutingModule],\n})\nexport class BlogModule {}\n","import { Injectable } from '@angular/core';\nimport { Query, gql } from 'apollo-angular';\nimport { Post } from '../../../models/post.interface';\nimport { User } from '../../../models/user.interface';\n\nexport interface CurrentUser {\n  currentUser: User;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentUserSQL extends Query<CurrentUser> {\n  document = gql`\n    query {\n      currentUser {\n        id\n        email\n        firstName\n        lastName\n        phoneNumber\n        created\n        updated\n      }\n    }\n  `;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\nimport { first } from 'rxjs/operators';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  error = '';\n  numberPattern = '^[+][0-9]*$';\n\n  constructor(\n    private userService: UserService,\n    private fb: FormBuilder,\n    private router: Router,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group({\n      email: [\n        '',\n        [Validators.required, Validators.email, Validators.minLength(6)]\n      ],\n      password: ['', [Validators.required, Validators.minLength(3)]],\n      firstName: [\n        '',\n        [Validators.required, Validators.minLength(3), Validators.maxLength(30)]\n      ],\n      lastName: [\n        '',\n        [Validators.required, Validators.minLength(3), Validators.maxLength(30)]\n      ],\n      phoneNumber: ['', [Validators.pattern(this.numberPattern)]]\n    });\n  }\n\n  hasFormErrors() {\n    return !this.registerForm.valid;\n  }\n\n  onSubmit() {\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    console.log(this.registerForm.value);\n\n    this.userService\n      .register(this.registerForm.value)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.router.navigateByUrl('/');\n          this.messageService.add({\n            key: 'defaultToast',\n            severity: 'success',\n            summary: 'Successfully registered!',\n            detail: `You have to confirm your account by clicking link sent on email!`\n          });\n        },\n        error: error => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'error',\n            summary: 'Can not register user',\n            detail: error\n          });\n        }\n      });\n  }\n}\n","<form [formGroup]=\"registerForm\" class=\"ui-g\">\n    <p-panel header=\"Log in\" class=\"ui-g-12\">\n        <div *ngIf=\"error\" class=\"ui-g\">{{error}}</div> \n        <div class=\"ui-g\">\n            <label for=\"email\" class=\"ui-g-12 ui-md-2\">E-mail</label>\n            <input pInputText id=\"email\" formControlName=\"email\" placeholder=\"Enter your email\" class=\"ui-g-12 ui-md-5\"/>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"registerForm\" field=\"email\" nicename=\"email\"></app-fielderrors>\n            </div>\n        </div>\n        <div class=\"ui-g\">\n            <label for=\"password\" class=\"ui-g-12 ui-md-2\">Password</label>\n            <input pInputText id=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" class=\"ui-g-12 ui-md-5\"/>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"registerForm\" field=\"password\" nicename=\"password\"></app-fielderrors>\n            </div>\n        </div>\n        <div class=\"ui-g\">\n            <label for=\"firstName\" class=\"ui-g-12 ui-md-2\">First Name</label>\n            <input pInputText id=\"firstName\" formControlName=\"firstName\" placeholder=\"Enter your first name\" class=\"ui-g-12 ui-md-5\"/>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"registerForm\" field=\"firstName\" nicename=\"firstName\"></app-fielderrors>\n            </div>\n        </div>\n        <div class=\"ui-g\">\n            <label for=\"lastName\" class=\"ui-g-12 ui-md-2\">Last Name</label>\n            <input pInputText id=\"lastName\" formControlName=\"lastName\" placeholder=\"Enter your first name\" class=\"ui-g-12 ui-md-5\"/>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"registerForm\" field=\"lastName\" nicename=\"lastName\"></app-fielderrors>\n            </div>\n        </div>\n        <div class=\"ui-g\">\n            <label for=\"phoneNumber\" class=\"ui-g-12 ui-md-2\">Phone Number</label>\n            <p-inputMask pInputMask id=\"phoneNumber\" formControlName=\"phoneNumber\" mask=\"+99999999999\" placeholder=\"+99999999999\"></p-inputMask>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"registerForm\" field=\"phoneNumber\" nicename=\"phoneNumber\"></app-fielderrors>\n            </div>\n        </div>\n\n\n        <button pButton type=\"button\" label=\"Click\" [disabled]=\"!registerForm.valid\" (click)=\"onSubmit()\"></button>\n    </p-panel>\n    \n</form>","import { Injectable, Input, ɵConsole } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  ChangeConfirmTokenGQL,\n  ChangePassByTokenGQL,\n  ChangePasswordGQL,\n  ConfirmUserGQL,\n  LoginGQL,\n  LogoutGQL,\n  ResetPasswordGQL,\n  SendChangePassEmailGQL,\n  SendCodePhoneGQL\n} from 'src/app/core/graphql';\nimport { AccessToken, RefreshToken, UserStorage } from 'src/app/core/storage';\n\nexport interface LoginForm {\n  email: string;\n  password: string;\n}\n\nexport interface resetForm {\n  code: number;\n  phoneNumber: string;\n}\n\nexport interface jwtResponse {\n  role: string;\n  valid: boolean;\n}\n\nexport interface changePassByTokenForm {\n  token: string;\n  password: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private userSubject: BehaviorSubject<any>;\n  public user: Observable<any>;\n\n  @AccessToken() private accessToken: string;\n  @RefreshToken() private refreshToken: string;\n  @UserStorage() private userStorage: string;\n\n  constructor(\n    private loginGQL: LoginGQL,\n    private logoutGQL: LogoutGQL,\n    private confirmUserGQL: ConfirmUserGQL,\n    private changeConfirmTokenGQL: ChangeConfirmTokenGQL,\n    private sendCodePhoneGQL: SendCodePhoneGQL,\n    private resetPasswordGQL: ResetPasswordGQL,\n    private changePassByTokenGQL: ChangePassByTokenGQL,\n    private sendChangePassEmailGQL: SendChangePassEmailGQL,\n    private changePasswordGQL: ChangePasswordGQL\n  ) {\n    this.userSubject = new BehaviorSubject(this.userStorage || null);\n    this.user = this.userSubject.asObservable();\n  }\n\n  public get userValue() {\n    return this.userSubject.value;\n  }\n\n  login(credentials: LoginForm) {\n    return this.loginGQL\n      .fetch({\n        input: credentials\n      })\n      .pipe(\n        map(result => {\n          const user = {\n            ...result.data.login.user,\n            role: result.data.login.role\n          };\n\n          this.accessToken = result.data.login.accessToken;\n          this.refreshToken = result.data.login.refreshToken;\n          this.userStorage = user;\n\n          this.userSubject.next(user);\n        })\n      );\n  }\n\n  logout() {\n    const user = this.userValue;\n    this.logoutGQL.mutate({ id: user.id }).subscribe();\n\n    localStorage.removeItem('accesstoken');\n    localStorage.removeItem('refreshtoken');\n    localStorage.removeItem('user');\n    this.userSubject.next(null);\n  }\n\n  confirmUser(token: string): Observable<any> {\n    return this.confirmUserGQL.mutate({ token: token });\n  }\n\n  sendCodePhone(phoneNumber: string): Observable<any> {\n    return this.sendCodePhoneGQL.mutate({ phoneNumber: phoneNumber });\n  }\n\n  changeConfirmToken(email: string) {\n    return this.changeConfirmTokenGQL.mutate({ email: email });\n  }\n\n  resetPassword(input: resetForm) {\n    return this.resetPasswordGQL.mutate({ input: input });\n  }\n\n  sendChangePassEmail(email: string) {\n    return this.sendChangePassEmailGQL.mutate({ email: email });\n  }\n\n  changePassByToken(input: changePassByTokenForm) {\n    return this.changePassByTokenGQL.mutate({ input: input });\n  }\n\n  changePassword(password: string) {\n    return this.changePasswordGQL.mutate({ password: password });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\n\n@Component({\n  selector: 'app-by-email',\n  templateUrl: './by-email.component.html',\n  styleUrls: ['./by-email.component.css']\n})\nexport class ByEmailComponent implements OnInit {\n  emailForm: FormGroup;\n  error = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.emailForm = this.fb.group({\n      email: [\n        '',\n        [Validators.required, Validators.email, Validators.minLength(6)]\n      ]\n    });\n  }\n\n  onEmailFormSubmit() {\n    if (this.emailForm.invalid) {\n      return;\n    }\n\n    this.authService\n      .sendChangePassEmail(this.emailForm.value.email)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'success',\n            summary: 'Successfully sent!',\n            detail: 'Please check your inbox'\n          });\n        },\n        error: error => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'error',\n            summary: 'Error! :(',\n            detail: `Email was not sent: ${error}`\n          });\n        }\n      });\n  }\n}\n","<form [formGroup]=\"emailForm\" class=\"ui-g\">\n    <p-panel header=\"Reset password by email\" class=\"ui-g-12\">\n        <div *ngIf=\"error\" class=\"ui-g\">{{error}}</div> \n        <div class=\"ui-g\">\n            <label for=\"email\" class=\"ui-g-12 ui-md-2\">Email</label>\n            <input pInputText id=\"email\" formControlName=\"email\" placeholder=\"Enter your email\" class=\"ui-g-12 ui-md-5\"/>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"emailForm\" field=\"email\" nicename=\"email\"></app-fielderrors>\n            </div>\n        </div>\n        <button pButton type=\"button\" label=\"Click\" [disabled]=\"!emailForm.valid\" (click)=\"onEmailFormSubmit()\"></button>\n\n    </p-panel>\n    \n</form>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n","<app-progress-bar></app-progress-bar>\n<app-header></app-header>\n<p-messages key=\"defaultMessage\"></p-messages>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n<p-toast position=\"top-center\" key=\"defaultToast\"></p-toast>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\n\n@Component({\n  selector: 'app-by-phone',\n  templateUrl: './by-phone.component.html',\n  styleUrls: ['./by-phone.component.css']\n})\nexport class ByPhoneComponent implements OnInit {\n  phoneForm: FormGroup;\n  numberPattern = '^[+][0-9]*$';\n  error = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.phoneForm = this.fb.group({\n      phoneNumber: [\n        '',\n        [Validators.required, Validators.pattern(this.numberPattern)]\n      ]\n    });\n  }\n\n  onPhoneFormSubmit() {\n    if (this.phoneForm.invalid) {\n      return;\n    }\n\n    this.authService\n      .sendCodePhone(this.phoneForm.value.phoneNumber)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'success',\n            summary: 'Code sent!',\n            detail: 'Please check your phone!'\n          });\n        },\n        error: error => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'error',\n            summary: 'Code was not send',\n            detail: error\n          });\n        }\n      });\n  }\n}\n","<form [formGroup]=\"phoneForm\" class=\"ui-g\">\n    <p-panel header=\"Reset password by phone\" class=\"ui-g-12\">\n        <div *ngIf=\"error\" class=\"ui-g\">{{error}}</div> \n        <div class=\"ui-g\">\n            <label for=\"phoneNumber\" class=\"ui-g-12 ui-md-2\">Phone Number</label>\n            <p-inputMask pInputMask id=\"phoneNumber\" formControlName=\"phoneNumber\" mask=\"+99999999999\" placeholder=\"+99999999999\"></p-inputMask>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"phoneForm\" field=\"phoneNumber\" nicename=\"phoneNumber\"></app-fielderrors>\n            </div>\n        </div>\n        <button pButton type=\"button\" label=\"Click\" [disabled]=\"!phoneForm.valid\" (click)=\"onPhoneFormSubmit()\"></button>\n        <div class=\"ui-g\">\n            <a routerLink=\"/users/reset-password/confirmation-code\">Type confirmation code</a>\n        </div>\n    </p-panel>    \n</form>\n","export * from './changePassByToken.mutation';\nexport * from './changeConfirmToken.mutation';\nexport * from './logout.mutation';\nexport * from './changePassword.mutation';\nexport * from './resetPassword.mutation';\nexport * from './sendCodePhone.mutation';\nexport * from './confirmUser.mutation';\nexport * from './sendChangePassEmail.mutation';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-workboard',\n  templateUrl: './workboard.component.html',\n  styleUrls: ['./workboard.component.css']\n})\nexport class WorkboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>workboard works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\n\n@Component({\n  selector: 'app-change-pass',\n  templateUrl: './change-pass.component.html',\n  styleUrls: ['./change-pass.component.css']\n})\nexport class ChangePassComponent implements OnInit {\n  form: FormGroup;\n  error: '';\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      token: ['', Validators.required],\n      password: [\n        '',\n        [Validators.required, Validators.minLength(3), Validators.maxLength(30)]\n      ]\n    });\n\n    this.form.patchValue({\n      token: this.route.snapshot.queryParams['token']\n    });\n\n    this.router.navigate([], { relativeTo: this.route, replaceUrl: true });\n  }\n\n  onSubmit() {\n    this.authService\n      .changePassByToken(this.form.value)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.router.navigateByUrl('/users/login');\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'success',\n            summary: 'Successfully changed!',\n            detail: 'Now you can log in'\n          });\n        },\n        error: error => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'error',\n            summary: 'Error! :(',\n            detail: `Password was not changed: ${error}`\n          });\n        }\n      });\n  }\n}\n","<form [formGroup]=\"form\" class=\"ui-g\">\n    <p-panel header=\"Type new Password\" class=\"ui-g-12\">\n        <div class=\"ui-g\">\n            <label for=\"password\" class=\"ui-g-12 ui-md-2\">Password</label>\n            <input pInputText id=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" class=\"ui-g-12 ui-md-5\"/>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"form\" field=\"password\" nicename=\"password\"></app-fielderrors>\n            </div>\n        </div>\n        <button pButton type=\"button\" label=\"Click\" [disabled]=\"!form.valid\" (click)=\"onSubmit()\"></button>\n    </p-panel>\n    \n</form>","import { Injectable } from '@angular/core';\nimport { Mutation, gql } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegisterGQL extends Mutation {\n  document = gql`\n    mutation register($input: CreateUserInput) {\n      registerUser(createUserInput: $input) {\n        firstName\n        lastName\n      }\n    }\n  `;\n}\n","export * from './auth';\n// export * from './category';\n// export * from './post';\nexport * from './user';\n","import { Injectable } from '@angular/core';\nimport { Mutation, gql } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutGQL extends Mutation {\n  document = gql`\n    mutation logout($id: String!) {\n      logout(id: $id)\n    }\n  `;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AllPostsGQL } from 'src/app/core/graphql';\nimport { Post } from 'src/app/core/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n  constructor(private allPostsGQL: AllPostsGQL) {}\n\n  findAll(): Observable<Post[]> {\n    return this.allPostsGQL\n      .watch()\n      .valueChanges.pipe(map(result => result.data.posts));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from 'src/app/core/guards/auth.guard';\nimport { AccountComponent } from './account/account.component';\nimport { ConfirmAccountComponent } from './confirm-account/confirm-account.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ResendConfirmLinkComponent } from './confirm-account/resend-confirm-link/resend-confirm-link.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ChangePassComponent } from './reset-password/by-email/change-pass/change-pass.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { EditAccountComponent } from './edit-account/edit-account.component';\n\nconst userRoutes: Routes = [\n  {\n    path: 'users',\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'register',\n        component: RegisterComponent\n      },\n      {\n        path: 'confirm-account',\n        component: ConfirmAccountComponent\n      },\n      {\n        path: 'resend-confirmLink',\n        component: ResendConfirmLinkComponent\n      },\n      {\n        path: 'reset-password',\n        children: [\n          {\n            path: '',\n            component: ResetPasswordComponent\n          },\n          {\n            path: 'changePass',\n            component: ChangePassComponent\n          }\n        ]\n      },\n      {\n        path: 'account',\n        canActivate: [AuthGuard],\n        children: [\n          {\n            path: '',\n            component: AccountComponent\n          },\n          {\n            path: 'change-password',\n            component: ChangePasswordComponent\n          },\n          {\n            path: 'edit-account',\n            component: EditAccountComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(userRoutes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule {}\n","export * from './crypto';\n","import { Injectable } from '@angular/core';\nimport { Mutation, gql } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChangeConfirmTokenGQL extends Mutation {\n  document = gql`\n    mutation($email: String!) {\n      changeConfirmToken(email: $email)\n    }\n  `;\n}\n","import { Injectable } from '@angular/core';\nimport { Mutation, gql } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SendChangePassEmailGQL extends Mutation {\n  document = gql`\n    mutation($email: String!) {\n      sendChangePassEmail(email: $email)\n    }\n  `;\n}\n","export * from './register.mutation';\nexport * from './updateUser.mutation';\n","import { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BlogComponent } from './modules/blog/blog/blog.component';\nimport { HomeComponent } from './modules/home/home.component';\nimport { BlogModule } from './modules/blog/blog/blog.module';\nimport { FooterComponent } from './core/footer/footer.component';\n\nimport { MenubarModule } from 'primeng/menubar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { HeaderComponent } from './core/header/header.component';\nimport { PasswordModule } from 'primeng/password';\n\nimport { MenuModule } from 'primeng/menu';\nimport { AccordionModule } from 'primeng/accordion';\nimport { LoginComponent } from './modules/users/login/login.component';\nimport { RegisterComponent } from './modules/users/register/register.component';\nimport { UsersModule } from './modules/users/users.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PanelModule } from 'primeng/panel';\nimport { AccountComponent } from './modules/users/account/account.component';\nimport { FielderrorsComponent } from './shared/fielderrors/fielderrors.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AdminModule } from './modules/admin/admin.module';\nimport { WorkboardComponent } from './modules/admin/workboard/workboard.component';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { ToastModule } from 'primeng/toast';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { ConfirmAccountComponent } from './modules/users/confirm-account/confirm-account.component';\nimport { ResendConfirmLinkComponent } from './modules/users/confirm-account/resend-confirm-link/resend-confirm-link.component';\nimport { ResetPasswordComponent } from './modules/users/reset-password/reset-password.component';\nimport { ConfirmationCodeComponent } from './modules/users/reset-password/by-phone/confirmation-code/confirmation-code.component';\nimport { ProgressBarComponent } from './shared/progress-bar/progress-bar.component';\nimport { ByPhoneComponent } from './modules/users/reset-password/by-phone/by-phone.component';\nimport { ByEmailComponent } from './modules/users/reset-password/by-email/by-email.component';\nimport { ChangePassComponent } from './modules/users/reset-password/by-email/change-pass/change-pass.component';\nimport { ChangePasswordComponent } from './modules/users/change-password/change-password.component';\nimport { EditAccountComponent } from './modules/users/edit-account/edit-account.component';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    BlogComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    AccountComponent,\n    FielderrorsComponent,\n    WorkboardComponent,\n    ConfirmAccountComponent,\n    ResendConfirmLinkComponent,\n    ResetPasswordComponent,\n    ConfirmationCodeComponent,\n    ProgressBarComponent,\n    ByPhoneComponent,\n    ByEmailComponent,\n    ChangePassComponent,\n    ChangePasswordComponent,\n    EditAccountComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    CoreModule,\n    MessageModule,\n    MessagesModule,\n    BlogModule,\n    UsersModule,\n    MenuModule,\n    MenubarModule,\n    InputTextModule,\n    ButtonModule,\n    AccordionModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PasswordModule,\n    PanelModule,\n    JwtModule,\n    AdminModule,\n    ToastModule,\n    InputMaskModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { User } from 'src/app/core/models/user.interface';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n  user: Observable<User>;\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.user = this.userService.getCurrentUser().pipe(map(result => result));\n  }\n}\n","<p *ngIf=\"(user | async) as user\">\nHi {{ user.firstName }} {{ user.lastName }}!\n</p>\n\n<div class=\"ui-g\">\n    <a routerLink=\"/users/account/change-password\">Change password</a><br />\n    <a routerLink=\"/users/account/edit-account\">Edit account</a>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\n\n@Component({\n  selector: 'app-confirm-account',\n  templateUrl: './confirm-account.component.html',\n  styleUrls: ['./confirm-account.component.css']\n})\nexport class ConfirmAccountComponent implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    const token = this.route.snapshot.queryParams['token'];\n\n    this.router.navigate([], { relativeTo: this.route, replaceUrl: true });\n\n    this.authService\n      .confirmUser(token)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.router.navigateByUrl('/users/login');\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'success',\n            summary: 'Successfully confirmed!',\n            detail: 'Now you can log in'\n          });\n        },\n        error: error => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'error',\n            summary: 'Error! :(',\n            detail: `Account was not confirmed: ${error}`\n          });\n        }\n      });\n  }\n}\n","<p>confirm-account works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ProgressBarService } from 'src/app/core/services/progress-bar/progress-bar.service';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.css']\n})\nexport class ProgressBarComponent implements OnInit {\n  isLoading: Subject<boolean> = this.progressBarService.isLoading;\n\n  constructor(private progressBarService: ProgressBarService) {}\n\n  ngOnInit(): void {}\n}\n","<p-progressBar *ngIf=\"isLoading | async\" mode=\"indeterminate\" [style]=\"{'height': '5px'}\"></p-progressBar>\n","import { Injectable } from '@angular/core';\nimport { Mutation, gql } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SendCodePhoneGQL extends Mutation {\n  document = gql`\n    mutation($phoneNumber: String!) {\n      sendCodePhone(phoneNumber: $phoneNumber)\n    }\n  `;\n}\n","export * from './auth';\nexport * from './category';\nexport * from './post';\nexport * from './user';\n","import { Injectable } from '@angular/core';\nimport { Query, gql } from 'apollo-angular';\nimport { Post } from '../../../models/post.interface';\n\nexport interface ResponseInterface {\n  posts: Post[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllPostsGQL extends Query<ResponseInterface> {\n  document = gql`\n    query {\n      posts {\n        title\n        text\n        category {\n          name\n        }\n        user {\n          firstName\n          lastName\n        }\n      }\n    }\n  `;\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProgressBarService {\n  isLoading = new Subject<boolean>();\n\n  constructor() {}\n\n  show() {\n    this.isLoading.next(true);\n  }\n  hide() {\n    this.isLoading.next(false);\n  }\n}\n","export * from './userRole.enum';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\n\n@Component({\n  selector: 'app-resend-confirm-link',\n  templateUrl: './resend-confirm-link.component.html',\n  styleUrls: ['./resend-confirm-link.component.css']\n})\nexport class ResendConfirmLinkComponent implements OnInit {\n  form: FormGroup;\n  error: '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      email: [\n        '',\n        [Validators.required, Validators.email, Validators.minLength(6)]\n      ]\n    });\n  }\n\n  hasFormErrors() {\n    return !this.form.valid;\n  }\n\n  onSubmit() {\n    if (this.form.invalid) {\n      return;\n    }\n\n    this.authService\n      .changeConfirmToken(this.form.value.email)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'success',\n            summary: 'Email with new link was send.',\n            detail: 'Please confirm your account!'\n          });\n        },\n        error: error => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'error',\n            summary: 'Can not resend email with new link',\n            detail: error\n          });\n        }\n      });\n  }\n}\n","<form [formGroup]=\"form\" class=\"ui-g\">\n    <p-panel header=\"Resend confirmation link\" class=\"ui-g-12\">\n        <div *ngIf=\"error\" class=\"ui-g\">{{error}}</div> \n        <div class=\"ui-g\">\n            <label for=\"email\" class=\"ui-g-12 ui-md-2\">E-mail</label>\n            <input pInputText id=\"email\" formControlName=\"email\" placeholder=\"Enter your email\" class=\"ui-g-12 ui-md-5\"/>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"form\" field=\"email\" nicename=\"email\"></app-fielderrors>\n            </div>\n        </div>\n        <button pButton type=\"button\" label=\"Click\" [disabled]=\"!form.valid\" (click)=\"onSubmit()\"></button>\n\n    </p-panel>\n    \n</form>","export * from './allPosts.query';\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\nimport { first } from 'rxjs/operators';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  error = '';\n\n  constructor(\n    private authService: AuthService,\n    private fb: FormBuilder,\n    private router: Router,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: [\n        '',\n        [Validators.required, Validators.email, Validators.minLength(6)]\n      ],\n      password: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n\n  hasFormErrors() {\n    return !this.loginForm.valid;\n  }\n\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.authService\n      .login(this.loginForm.value)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.router.navigateByUrl('/users/account');\n        },\n        error: error => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'error',\n            summary: 'Can not log in',\n            detail: error\n          });\n        }\n      });\n  }\n}\n","<form [formGroup]=\"loginForm\" class=\"ui-g\">\n    <p-panel header=\"Log in\" class=\"ui-g-12\">\n        <div *ngIf=\"error\" class=\"ui-g\">{{error}}</div> \n        <div class=\"ui-g\">\n            <label for=\"email\" class=\"ui-g-12 ui-md-2\">E-mail</label>\n            <input pInputText id=\"email\" formControlName=\"email\" placeholder=\"Enter your email\" class=\"ui-g-12 ui-md-5\"/>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"loginForm\" field=\"email\" nicename=\"email\"></app-fielderrors>\n            </div>\n        </div>\n        <div class=\"ui-g\">\n            <label for=\"password\" class=\"ui-g-12 ui-md-2\">Password</label>\n            <input pInputText id=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" class=\"ui-g-12 ui-md-5\"/>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"loginForm\" field=\"password\" nicename=\"password\"></app-fielderrors>\n            </div>\n        </div>\n\n        <button pButton type=\"button\" label=\"Click\" [disabled]=\"!loginForm.valid\" (click)=\"onSubmit()\"></button>\n        <div class=\"ui-g\">\n            <a routerLink=\"/users/resend-confirmLink\">Click to resend confirmation link to your email</a>\n        </div>\n           <div class=\"ui-g\">\n            <a routerLink=\"/users/reset-password\">Click to reset password by email or phone number</a>\n        </div>\n    </p-panel>\n    \n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css'],\n})\nexport class ResetPasswordComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-by-phone></app-by-phone>\n<app-confirmation-code></app-confirmation-code>\n<app-by-email></app-by-email>\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ListCategoriesGQL } from 'src/app/core/graphql';\nimport { Category } from 'src/app/core/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n  constructor(private listCategoriesGQL: ListCategoriesGQL) {}\n\n  findAll(): Observable<Category[]> {\n    return this.listCategoriesGQL\n      .watch()\n      .valueChanges.pipe(map(result => result.data.categories));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { GraphQLModule } from './graphql/config/graphql.module';\nimport { ProgressBarService } from './services/progress-bar/progress-bar.service';\nimport { MessageService } from 'primeng/api';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { ProgressBarInterceptor } from 'src/app/core/interceptors';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    GraphQLModule,\n    ProgressSpinnerModule,\n    ProgressBarModule\n  ],\n  providers: [\n    MessageService,\n    ProgressBarService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ProgressBarInterceptor,\n      multi: true\n    }\n  ]\n})\nexport class CoreModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n  form: FormGroup;\n  error: '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      password: [\n        '',\n        [Validators.required, Validators.minLength(3), Validators.maxLength(30)]\n      ]\n    });\n  }\n\n  onSubmit() {\n    this.authService\n      .changePassword(this.form.value.password)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'success',\n            summary: 'Successfully changed!',\n            detail: 'Now you have to use your new password!'\n          });\n        },\n        error: error => {\n          this.messageService.add({\n            key: 'defaultMessage',\n            severity: 'error',\n            summary: 'Error! :(',\n            detail: `Password was not changed: ${error}`\n          });\n        }\n      });\n  }\n}\n","<form [formGroup]=\"form\" class=\"ui-g\">\n    <p-panel header=\"Type new Password\" class=\"ui-g-12\">\n        <div class=\"ui-g\">\n            <label for=\"password\" class=\"ui-g-12 ui-md-2\">Password</label>\n            <input pInputText id=\"password\" formControlName=\"password\" placeholder=\"Enter your password\" class=\"ui-g-12 ui-md-5\"/>\n            <div class=\"ui-g-12 ui-md-5\">\n                <app-fielderrors [form]=\"form\" field=\"password\" nicename=\"password\"></app-fielderrors>\n            </div>\n        </div>\n        <button pButton type=\"button\" label=\"Click\" [disabled]=\"!form.valid\" (click)=\"onSubmit()\"></button>\n    </p-panel>\n    \n</form>","export * from './graphql.module';\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-fielderrors',\n  templateUrl: './fielderrors.component.html',\n  styleUrls: ['./fielderrors.component.css'],\n})\nexport class FielderrorsComponent implements OnInit {\n  @Input('form') form: FormGroup;\n  @Input('field') fieldName: string;\n  @Input('name') name: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  fieldErrors(field: string) {\n    let controlState = this.form.controls[field];\n    return controlState.dirty && controlState.errors\n      ? controlState.errors\n      : null;\n  }\n}\n","<div class=\"ui-message ui-messages-error\" *ngIf=\"fieldErrors(fieldName)\">\n    <i class=\"fa fa-close\"></i>\n    <span *ngIf=\"fieldErrors(fieldName).required\">{{ name }} is required!</span>\n    <span *ngIf=\"fieldErrors(fieldName).minlength\">{{ name }} must be min {{ fieldErrors(fieldName).minlength.requiredLength }} characters!</span>\n    <span *ngIf=\"fieldErrors(fieldName).maxlength\">{{ name }} must be max {{ fieldErrors(fieldName).maxlength.requiredLength }} characters!</span>\n    <span *ngIf=\"fieldErrors(fieldName).email\">{{ name }} must be email!</span>\n    <span *ngIf=\"fieldErrors(fieldName).pattern\">{{ name }} should be in valid {{ fieldErrors(fieldName).pattern.requiredPattern }} form!</span>\n</div>","export * from './access-token.storage';\nexport * from './refresh-token.storage';\nexport * from './user.storage';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './modules/home/home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { Mutation, gql } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmUserGQL extends Mutation {\n  document = gql`\n    mutation($token: String!) {\n      confirmUser(confirmToken: $token)\n    }\n  `;\n}\n","import { Injector, NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Apollo, APOLLO_OPTIONS } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular/http';\nimport { InMemoryCache, ApolloLink } from '@apollo/client/core';\nimport { setContext } from '@apollo/client/link/context';\nimport { environment } from 'src/environments/environment';\nimport { decrypt, encrypt } from '../../helpers';\nimport { onError } from '@apollo/client/link/error';\nimport { fromPromise } from 'apollo-link';\n\nconst uri = environment.backendUrl;\nconst unAuthenticatedMessage = 'jwt expired';\n\nexport function createApollo(httpLink: HttpLink) {\n  let isRefreshing = false;\n  let pendingRequests = [];\n\n  const resolvePendingRequests = () => {\n    pendingRequests.map(callback => callback());\n    pendingRequests = [];\n  };\n\n  const errorLink = onError(\n    ({ graphQLErrors, networkError, operation, forward }) => {\n      if (graphQLErrors) {\n        for (let err of graphQLErrors) {\n          switch (err.message) {\n            case unAuthenticatedMessage:\n              let forward$;\n              let oldRefreshToken = decrypt(\n                localStorage.getItem('refreshtoken')\n              );\n\n              if (!isRefreshing) {\n                isRefreshing = true;\n                forward$ = fromPromise(\n                  fetch(uri, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                      query: `mutation($currentRefreshToken: String) {\n                        refreshToken(refreshToken: $currentRefreshToken) {\n                          accessToken\n                          refreshToken\n                        }\n                      }`,\n                      variables: { currentRefreshToken: oldRefreshToken }\n                    })\n                  })\n                    .then(response => response.json())\n                    .then(data => {\n                      const newHeaders = `Bearer ${\n                        data.data.refreshToken.accessToken\n                      }`;\n                      const encryptedAccessToken = encrypt(\n                        data.data.refreshToken.accessToken\n                      );\n                      const encryptedRefreshToken = encrypt(\n                        data.data.refreshToken.refreshToken\n                      );\n\n                      localStorage.setItem('accesstoken', encryptedAccessToken);\n                      localStorage.setItem(\n                        'refreshtoken',\n                        encryptedRefreshToken\n                      );\n\n                      operation.setContext({\n                        headers: {\n                          Authorization: newHeaders\n                        }\n                      });\n                    })\n                    .then(() => {\n                      resolvePendingRequests();\n                      return true;\n                    })\n                    .catch(() => {\n                      pendingRequests = [];\n                      return false;\n                    })\n                    .finally(() => {\n                      isRefreshing = false;\n                    })\n                );\n              }\n\n              return forward$.flatMap(() => forward(operation));\n            default:\n              console.log(\n                `[GraphQL error]: Message: ${err.message}, Location: ${\n                  err.locations\n                }, Path: ${err.path}`\n              );\n          }\n        }\n      }\n      if (networkError) {\n        console.log(`[Network error]: ${networkError}`);\n      }\n    }\n  );\n\n  const basic = setContext((operation, context) => ({\n    headers: {\n      Accept: 'charset=utf-8'\n    }\n  }));\n\n  const auth = setContext((operation, context) => {\n    const accesstoken = localStorage.getItem('accesstoken');\n\n    if (accesstoken) {\n      const decryptedJWT = decrypt(accesstoken);\n      return {\n        headers: {\n          Authorization: `Bearer ${decryptedJWT}`\n        }\n      };\n    } else {\n      return null;\n    }\n  });\n\n  const link = ApolloLink.from([\n    errorLink,\n    basic,\n    auth,\n    httpLink.create({ uri })\n  ]);\n  const cache = new InMemoryCache();\n\n  return {\n    link,\n    cache\n  };\n}\n\n@NgModule({\n  exports: [HttpClientModule],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink]\n    }\n  ]\n})\nexport class GraphQLModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}